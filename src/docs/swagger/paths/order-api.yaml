openapi: 3.0.0
info:
  title: Order API
  description: API for managing orders including tracking, delivery, and status updates.
  version: 1.0.0
servers:
  - url: http://localhost:3000
paths:
  /api/v1/orders:
    post:
      summary: Create a new order
      security:
        - bearerAuth: []
      tags:
        - Order
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrderDto'
      responses:
        '201':
          description: Order created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponseDto'
        '400':
          description: Validation error
        '403':
          description: Access restricted to administrators
    get:
      summary: List all orders
      security:
        - bearerAuth: []
      tags:
        - Order
      parameters:
        - in: query
          name: status
          schema:
            type: string
            enum:
              - pending
              - awaiting_pickup
              - picked_up
              - delivered
              - returned
          description: Filter orders by status
      responses:
        '200':
          description: Successfully retrieved list of all orders
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderResponseDto'
        '403':
          description: Access restricted to administrators

  /api/v1/orders/deliveryman/{deliverymanId}:
    get:
      summary: List all orders for a specific deliveryman
      security:
        - bearerAuth: []
      tags:
        - Order
      parameters:
        - name: deliverymanId
          in: path
          required: true
          schema:
            type: string
          description: ID of the deliveryman
        - in: query
          name: status
          schema:
            type: string
            enum:
              - pending
              - awaiting_pickup
              - picked_up
              - delivered
              - returned
          description: Optional status to filter the orders
      responses:
        '200':
          description: Successfully retrieved list of orders for the deliveryman
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderResponseDto'
        '403':
          description: Access restricted to administrators

  /api/v1/orders/{id}:
    get:
      summary: Get an order by ID
      security:
        - bearerAuth: []
      tags:
        - Order
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved order details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponseDto'
        '404':
          description: Order not found
    put:
      summary: Update an order
      security:
        - bearerAuth: []
      tags:
        - Order
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOrderDto'
      responses:
        '200':
          description: Order updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponseDto'
        '400':
          description: Validation error
        '403':
          description: Access restricted to administrators
    delete:
      summary: Delete an order
      security:
        - bearerAuth: []
      tags:
        - Order
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Order deleted successfully
        '404':
          description: Order not found
        '403':
          description: Access restricted to administrators
  /api/v1/orders/{id}/waiting:
    put:
      summary: Mark an order as waiting for pickup
      security:
        - bearerAuth: []
      tags:
        - Delivery Operations
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Order marked as waiting successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponseDto'
        '400':
          description: Failed to mark order as waiting
        '401':
          description: Unauthorized
        '403':
          description: Forbidden          

  /api/v1/orders/{id}/pickup:
    put:
      summary: Pickup an order
      security:
        - bearerAuth: []
      tags:
        - Delivery Operations
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Order picked up successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponseDto'
        '400':
          description: Failed to pickup order
        '401':
          description: Unauthorized
        '403':
          description: Forbidden

  /api/v1/orders/{id}/delivered:
    put:
      summary: Mark an order as delivered
      security:
        - bearerAuth: []
      tags:
        - Delivery Operations
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                deliveryPhoto:
                  type: string
                  format: binary
                  description: Photo of the delivered order
      responses:
        '200':
          description: Order marked as delivered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponseDto'
        '400':
          description: Failed to mark order as delivered
        '401':
          description: Unauthorized
        '403':
          description: Forbidden

  /api/v1/orders/{id}/returned:
    put:
      summary: Return an order
      security:
        - bearerAuth: []
      tags:
        - Delivery Operations
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Order returned successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponseDto'
        '400':
          description: Failed to return order
        '401':
          description: Unauthorized
        '403':
          description: Forbidden

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    CreateOrderDto:
      type: object
      required:
        - recipientId
        - deliverymanId
      properties:
        recipientId:
          type: string
        deliverymanId:
          type: string
    UpdateOrderDto:
      type: object
      properties:
        deliverymanId:
          type: string
        recipientId:
          type: string
        status:
          $ref: '#/components/schemas/OrderStatus'
    OrderResponseDto:
      type: object
      properties:
        id:
          type: string
        trackingCode:
          type: string
        status:
          $ref: '#/components/schemas/OrderStatus'
        deliveryPhoto:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        awaitingPickupAt:
          type: string
          format: date-time
          nullable: true
        pickedUpAt:
          type: string
          format: date-time
        returnedAt:
          type: string
          format: date-time
        recipient:
          $ref: '#/components/schemas/RecipientResponseDto'
        deliveryman:
          $ref: '#/components/schemas/ResponseUserDto'
    OrderStatus:
      type: string
      enum:
        - pending
        - awaiting_pickup
        - picked_up
        - delivered
        - returned
    RecipientResponseDto:
      type: object
      properties:
        id:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        street:
          type: string
        number:
          type: integer
        complement:
          type: string
        neighborhood:
          type: string
        city:
          type: string
        state:
          type: string
        zipCode:
          type: string
        email:
          type: string
        cpf:
          type: string
        latitude:
          type: number
        longitude:
          type: number
    ResponseUserDto:
        type: object
        properties:
          id:
            type: string
          firstName:
            type: string
          lastName:
            type: string
          cpf:
            type: string
          email:
            type: string
          role:
            type: string
            enum:
              - admin
              - deliveryman
